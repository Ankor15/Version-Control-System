name: CI/CD Workflow with Docker Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Check if requirements.txt exists
      - name: Check if requirements.txt exists
        run: |
          if [ ! -f requirements.txt ]; then echo "requirements.txt not found!"; exit 1; fi

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # List files in current directory (for debugging purposes)
      - name: List files in current directory
        run: |
          echo "Listing files in the repository:"
          ls -la

      # Run tests
      - name: Run tests
        run: |
          pytest test_app.py

  # Deploy to Docker
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the repository again
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-app .

      # Log in to DockerHub (jika Anda menggunakan DockerHub untuk registry)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker image to DockerHub (jika diperlukan)
      - name: Push Docker image
        run: |
          docker tag my-app ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      # Deploy Docker container (jika di server remote)
      - name: Run Docker container
        run: |
          docker run -d -p 5000:5000 my-app
